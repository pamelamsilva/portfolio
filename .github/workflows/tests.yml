name: Tests

on:
  push:
    branches:
      - "*" # matches every branch that doesn't contain a '/'
      - "*/*" # matches every branch containing a single '/'
      - "**" # matches every branch

jobs:
  django:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        # db: [postgres]
        python-version: [3.12]
        # include:
        #   - db: postgres
        #     db_port: 5432

    # services:
    #   postgres:
    #     image: postgres:16-alpine
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DATABASE: postgres
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 1s
    #       --health-timeout 5s
    #       --health-retries 6
    #     ports:
    #       - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Install OS deps and Set Locale
        run: |
          sudo apt-get install gettext
          sudo locale-gen pt_BR.UTF-8
          sudo localectl set-locale LANG="pt_BR.UTF-8"
          export LANG="pt_BR.UTF-8"
          sudo update-locale
          locale -a
          locale
          locale -c -k LC_NUMERIC
          localectl status
      - name: Set up Python ${{ matrix.python-version }}
        id: setupPython
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Pip
        id: cachePip
        uses: actions/cache@v3
        env:
          cache-name: cache-pip
        with:
          path: /opt/hostedtoolcache/Python/${{ steps.setupPython.outputs.python-version }}/x64
          key: ${{ runner.os }}-tests-${{ env.cache-name }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-tests-${{ env.cache-name }}-
            ${{ runner.os }}-tests-
            ${{ runner.os }}-
      - name: Set up ENV
        run: cp contrib/env-sample .env

      - name: Install Dependencies
        if: steps.cachePip.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Compile Messages
        run: python manage.py compilemessages -l pt_BR

      - name: Tests
        # env:
        #   DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        id: coverage_xml
        run: coverage run --rcfile=.coveragerc manage.py test -v 2

      - name: Coverage
        run: coverage combine && coverage report && coverage xml
